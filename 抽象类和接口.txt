抽象类和接口：
1.抽象类中的方法称为抽象方法，指没有被实现的方法。
2.接口中的方法都属于抽象方法，但是由于全部是抽象方法，因此重新定义为接口。
3.抽象类和普通类最大的一点区别就在于抽象类无法被实例化，必须是继承自它的子类实现了所有的抽象方法之后才能够被其子类实例化。
4.接口中的变量全部是public static final类型，方法则是public abstract类型，所以所接口中的方法全部是抽象方法。（先有抽象方法，然后再有接口）
5.再java8之前，接口是抽象类的延伸，它可以看作是一个完全抽象的类。也就是说不能有任何的方法实现。
6.抽象类的使用场合：
在既需要统一的接口，又需要实例变量或缺省的方法的情况下，就可以使用它。
7.接口的使用场合：
（1）类与类之间需要特定的接口进行协调，而不在乎其他们实现
（2）作为能够实现特定功能的标识存在，也可以是什么接口方法都没有实现的纯粹标识。
（3）需要将一组类视为单一的类，而调用者只通过接口来与这组类发生联系
（4）需要实现特定的多项功能，而这些功能之间可能完全没有任何联系。