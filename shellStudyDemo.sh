#!/bin/bash
set -x
VAR1=100
echo $VAR1		#这里直接使用变量引用符（$）来输出VAR1，和下面的效果是一样
echo "$VAR1"	#这里使用了双引号来输出VAR1
#声明内容为字符串的变量
VAR2="A   B   C"
echo $VAR2		#输出时每个字母之间只会保留一个空格
echo "$VAR2"	#使用引号可以还原字符串变量中的空格
#单引号会原封不动的输出变量被定义时的内容。不会执行转义和变量解析
echo '$VAR2'
date_now=$(date)	#这里使用了$()的语法来执行date命令。并将它赋值给一个变量。
echo $date_now
#注意，如果我们不使用双引号来包裹命令执行后的输出存储变量，而是直接使用$变量名称来输出命令内容，那么输出的内容中会删除换行符，导致最后输出的内容全部在同一行。
LS=`ls -l`
echo $LS	#避免使用这种输出方式
echo "$LS"
#反引号不支持嵌套，而$()支持嵌套。
FIR_FILE_LINES=$(wc -l $(ls | sed -n '1p'))
echo $FIR_FILE_LINES
#需要注意的是，``在所有shell中都有效，而$()仅在bash shell中有效。
#shell只支持整数运算，如果结果是小数，则会舍去小数部分。
